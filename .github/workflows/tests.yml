name: Run Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: flask_api_user
          POSTGRES_PASSWORD: yourpass
          POSTGRES_DB: flask_api_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U flask_api_user" 
          --health-timeout=30s 
          --health-start-period=5s 
          --health-interval=10s 
          --health-retries=5

    env:
      FLASK_APP: app.py
      FLASK_ENV: production
      SECRET_KEY: your_secret_key_here
      DATABASE_URL: postgresql://flask_api_user:yourpass@localhost:5432/flask_api_db
      POSTGRES_USER: flask_api_user
      POSTGRES_PASSWORD: yourpass
      POSTGRES_DB: flask_api_db

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Create .env file from GitHub variables
      run: |
        echo "FLASK_APP=${FLASK_APP}" > .env
        echo "FLASK_ENV=${FLASK_ENV}" >> .env
        echo "SECRET_KEY=${SECRET_KEY}" >> .env
        echo "DATABASE_URL=${DATABASE_URL}" >> .env
        echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
        echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
        echo "POSTGRES_DB=${POSTGRES_DB}" >> .env

    - name: Wait for PostgreSQL to be ready
      run: |
        while ! pg_isready -h localhost -p 5432 -U $POSTGRES_USER; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done

    - name: Run Alembic migrations
      run: |
        poetry run alembic upgrade head

    - name: Populate database with initial data
      run: |
        poetry run python -m scripts.populate_db

    - name: Run tests
      run: |
        poetry run pytest --maxfail=1 -q
