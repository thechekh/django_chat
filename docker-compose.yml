version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  auth_app_backend:
    build:
      context: ./auth_app
    container_name: auth_app_backend
    env_file:
      - .env
    volumes:
      - ./auth_app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  auth_app_frontend:
    build:
      context: ./frontend
    container_name: auth_app_frontend
    volumes:
      - ./frontend:/app
    ports:
      - "8080:8080"

  celery:
    build:
      context: ./auth_app
    container_name: celery_worker
    command: celery -A celery_app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
